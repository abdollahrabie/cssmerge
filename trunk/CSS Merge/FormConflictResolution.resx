<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAKAEAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAM/PzwC9vb0A////AODg4QDGxsgAtLS0AP7+/gDJyckA6urqAPr6
        +gD9/f0A7u7uAODg4ADR0dEAqqqqAJ+fnwDp6ekA+fn5APz8/AC8vb0A6OnpAPj5+QD7/PwAvLy8AOjo
        6AD4+PgA+/v7AMXGxgDs7e0A+vv7AKenpwCbnJwA2tvbAPn6+gCbm5sA2traANna2gCam5sA2NnZAPf4
        +ABgwXwAqt66ABWlPwAos1IAqd65AJmamgDX2NgA9vf3AJDwoQBwpX4AY+19AI7yoQCWzqUAnNywAFHs
        bABI6WYAeOyNAKXgtAB33IkAV9htAFfdbQBT4W0AT+VpAEvmZwBI6GUAReljAELoXwBA5V0APeBZAHLl
        hgCh3rEAc96GAEjZYQBD3l4AQ+JeAETnYABE6GEAReliAEXoYgBD5l4AP+FbADrbVQA01E0Aatt7AJzc
        rABk3nkAPdxZAELiXgBF5mIARuhjAEbpYwBD5mAAQOJbADvbVgA11E4AL85IACjEQACd4qcAaON9AELh
        XwBE52EAO91WADbWTwAwz0kAKcZBAJfgogAlslAAi+ycAIzwngCN8Z8Ai/CdAInumgCG6ZYAS9tiADHP
        SAApyEIAmOGjAJ7dsgAuuFgAfuKPACrIQwD19vYAe96MALe3twCb4qYAbcuJALTmwwD19vYAe96MAOfn
        5wC3t7cAm+KmAPf39wBty4kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAB+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHd3AAAAAAAAAAAA
        AHwQEBAQEBAQEBAQEBAQEBB8AAAAd313AAAAAAAAAAABenp6enp6enp6enp6enp6ehAAAAB3e3V3AAAA
        AAAAAAEwMDAwMDAwMDAwMDB2d3d3d3d3d3d4eXV3AAAAAAAAATAwMDAwMDAwMDAwMCtsbW5ubm9wcXJz
        dHVrAAAAAAABMDAwMDAwMDAwMDAwK2NkZVtbW0xdZmdoaWprAAAAAAEoKCgoKCgoKCgoKCgrVldYWVpb
        T1xdXl9gYWIsAAAAASgoKCgoKCgoKCgoKCtISUpLTE1OT1BRUlNULFUAAAABFhYWFhYWFhYWFhYWKzs8
        PT4/QEFCQ0RFRixHAAAAAAESEhISEhISEhISEhI2KysrKysrKys3ODksOgAAAAAAASIiIiIiIiIiIiIi
        IiIiIiIuLzAwKzM0LDUAAAAAAAABCgoKCgoKCgoKCgoKCgoKCi4vMDArMSwyAAAAAAAAAAEeHh4eHh4e
        Hh4eHh4eHh4eJicoKCssLRAAAAAAAAAAARsbGxsbGxsbGxsbGxsbGxsmJygoKSooEAAAAAAAAAABFxcX
        FxcXFxcXFxcXFxcXFyMlFhYWFhYQAAAAAAAAAAETExMTExMTExMTExMTExMTIyQSEhISEhAAAAAAAAAA
        AQsLCwsLCwsLCwsLCwsLCwsgISIiIiIiEAAAAAAAAAABCwsLCwsLCwsLCwsLCwwNDh8NCgoKCgoQAAAA
        AAAAAAEHBwcHBwcHBwcHBwYGBgYGHB0eHh4eHhAAAAAAAAAAAQcHBwcHBwcHBwcHBgcHBBgZGhsbGxsb
        EAAAAAAAAAABBwcHBwcHBwcHBwcGBwQUFRYXFxcXFxcQAAAAAAAAAAEDAwMDAwMDAwMDAwYEAhESExMT
        ExMTExAAAAAAAAAAAQMDAwMDAwMDAwMEBQIJCgsLCwsLCwsLEAAAAAAAAAABAQEBAQEBAQEBAQECCQoL
        CwsLCwsMDQ4PAAAAAAAAAAAAAAAAAAABBwcHBwcHBwcHBwcGBgYGBggAAAAAAAAAAAAAAAAAAAEHBwcH
        BwcHBwcHBwYHBwQCAAAAAAAAAAAAAAAAAAAAAQcHBwcHBwcHBwcHBgcEAgAAAAAAAAAAAAAAAAAAAAAB
        AwMDAwMDAwMDAwMGBAIAAAAAAAAAAAAAAAAAAAAAAAEDAwMDAwMDAwMDBAUCAAAAAAAAAAAAAAAAAAAA
        AAAAAQEBAQEBAQEBAQEBAgAAAAAAAAAAAAD////////+/////n/gAA4/wAAOH8AAAA/AAAAHwAAAA8AA
        AAHAAAABwAAAA8AAAAfAAAAPwAAAH8AAAB/AAAAfwAAAH8AAAB/AAAAfwAAAH8AAAB/AAAAfwAAAH8AA
        AB/AAAAfwAAAH/+AAB//gAA//4AAf/+AAP//gAH//4AD/ygAAAAQAAAAIAAAAAEABAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwMDAAP///wC2trYAKq1SAKioqABF6WIAFaU/ACPiUQAv6F8AmJiZAIqK
        iwCKiosAAAAAAAAAAAAAAAAAAAAAAAAAAAALu7u7uwcAAAoiIiIqB3AABSIiJ3d3ZwAFIiIniWZmQAMi
        IiRERGQAASIiIiEkQAABIiIiISRQAAEiIiIhIjAAASIiIREiEAABIiIhISIQAAERERESIhAAAAASIiIR
        EAAAABIiIhIQAAAAEREREQAAAAAAAAAAAAD///cAgC+hAIAnfgCAA30AgAGhAIADpQCAB7AAgAdsAIAH
        ZgCAB40AgAe0AIAHiQDwB20A8AdtAPAPbQD//2kA
</value>
  </data>
</root>